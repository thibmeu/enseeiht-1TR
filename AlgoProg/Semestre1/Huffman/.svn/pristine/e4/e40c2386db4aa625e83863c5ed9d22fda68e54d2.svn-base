#include "binary.h"

void init_Binary(Binary* binary, Byte* byte, size_t size)
{
	*binary = malloc(sizepf(Binary));
	
	init_List(&(binary->byte));
	for(int iByte = 0; iByte < size % sizeof(Byte); iByte++)
	{
		Byte* curByte = malloc(sizeof(Byte));
		*curByte = byte[iByte];
		add_List(&(binary->byte), curByte);
	}
	
	binary->size = size;;
}

void destruct_Binary(Binary* binary);

void concatenate_Binary(Binary* dest, Binary source);

void write_Binary(Binary* binary, FILE* file);

Byte front_Binary(Binary binary)
{
	return front_List(binary.byte);
}

void left_shift_Binary(Binary* binary, int n);

void right_shift_Binary(Binary* binary, int n);

void or_Binary(Binary* dest, Binary source)
{
	
	while ()
}

void and_Binary(Binary* dest, Binary source);
